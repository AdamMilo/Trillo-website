//////////////////////////////////
/////LOGO
.logo {
  height: 3.25rem;
  margin-left: 2rem;
}

//////////////////////////////////
/////SEARCH - BOX
.search {
  //Flex item properties
  flex: 0 0 40%; //noGrow NoShrink 40%Baseline

  //Flex-container property
  display: flex;
  align-items: center;
  justify-content: center;

  @media only screen and (max-width: $bp-smallest) {
    order: 1; //placing the element on the last position in the row
    flex-grow: 0;
    flex-shrink: 0;
    flex-basis: 100%; //make it take up the entire width of the flex container.
    background-color: var(--color-grey-light-2);
  }
  &__input {
    //Remember that inputs don't inherit font properties by default
    font-family: inherit;
    font-size: inherit;
    color: inherit;

    width: 90%;
    margin-right: -3.25rem;
    //in order to make the button move on top of the input

    background-color: var(--color-grey-light-2);
    padding: 0.7rem 2rem;
    border: none;
    border-radius: 100px;

    transition: all 0.2s;
    &::-webkit-input-placeholder {
      font-weight: 100;
      color: var(--color-grey-light-4);
    }
    &:focus {
      outline: none;
      width: 100%;
      background-color: var(--color-grey-light-3);
    }
  }
  &__input:focus + &__button {
    background-color: var(--color-grey-light-3);
  }

  &__button {
    border: none;
    background-color: var(--color-grey-light-2);

    &:focus {
      outline: none;
    }
    &:active {
      transform: translateY(2px);
    }
  }

  &__icon {
    justify-self: center;
    height: 2rem;
    width: 2rem;
    fill: var(--color-grey-dark-3);
  }
}

//////////////////////////////////
/////USER NAVIGATION
.user-nav {
  align-self: stretch;
  display: flex;
  align-items: center; //vertically center flex-display:row

  //.user-nav > *{...}   ==> All children direct of .user-nav container
  // {icon-box} {user}
  & > * {
    padding: 0 2rem;
    cursor: pointer;
    height: 100%;

    display: flex;
    align-items: center;
    &:hover {
      background-color: var(--color-grey-light-3);
    }
  }

  &__icon-box {
    position: relative;
  }

  &__icon {
    height: 2.25rem;
    width: 2.25rem;
    fill: var(--color-grey-dark-2);
  }

  &__notification {
    font-size: 0.8rem;
    height: 1.75rem;
    width: 1.75rem;
    border-radius: 50%;
    background-color: var(--color-primary);
    color: #fff;

    position: absolute;
    top: 1.5rem;
    right: 1.1rem;

    // Flexbox for text
    display: flex;
    justify-content: center;
    align-items: center;
  }

  &__user-photo {
    height: 3.75rem;
    border-radius: 50%;
    margin-right: 1rem;
  }
}

//////////////////////////////////
/////SIDE NAVIGATION
.side-nav {
  font-size: 1.4rem;
  list-style: none;
  margin-top: 3.5rem;

  @media only screen and (max-width: $bp-medium) {
    //breakpoint at 900px

    //we want our nav elements to display side by side in a row
    display: flex;
    margin: 0;
  }

  &__item {
    position: relative;

    &:not(:last-child) {
      margin-bottom: 0.5rem;
    }
    // @media only screen and (max-width: $bp-medium) {
    //   flex: 1;
    //   //make each element take up the  same space
    //   //until the parent is 100%;
    //   // the same effect would be flex-basis:25% but if we had
    //   //more than 4 elements it would not work
    //   // the flex:1 works even if we add more nav elements
    //   flex-basis: 25%;
    // }
    &--active {
      background-color: var(--color-primary);
    }
    &::before,
    &--active::before {
      content: "";
      position: absolute;
      top: 0;
      left: 0;
      height: 100%;
      width: 3px;
      background-color: var(--color-primary);

      transform: scaleY(0);
      transition: transform 0.2s cubic-bezier(1, 0, 0, 1), width 0.4s 0.2s cubic-bezier(1, 0, 0, 1), background-color 0.1s;
    }

    &:active::before {
      background-color: var(--color-primary-light);
    }

    &:hover::before {
      transform: scaleY(1);
      width: 100%;
    }
  }

  &__link:link,
  &__link:visited {
    color: var(--color-grey-light-1);
    text-decoration: none;
    text-transform: uppercase;
    display: block;
    padding: 1.5rem 3rem;

    position: relative;
    z-index: 10;

    display: flex;
    align-items: center;

    @media only screen and (max-width: $bp-medium) {
      justify-content: center;
      padding: 2rem;
    }
    @media only screen and (max-width: $bp-small) {
      flex-direction: column;
      padding: 1.5 0.5rem;
    }
  }

  &__icon {
    //usually icons are sized to be squares
    width: 1.75rem;
    height: 1.75rem;
    margin-right: 2rem;
    fill: currentColor; //it is like inherit for color

    @media only screen and (max-width: $bp-small) {
      margin-right: 0;
      margin-left: 0.7rem;
      width: 1.5rem;
      height: 1.5rem;
    }
  }
}

//////////////////////////////////
/////LEGAL TEXT
.legal {
  font-size: 1.2rem;
  color: var(--color-grey-light-4);
  text-align: center;
  padding: 2.5rem;

  align-self: flex-end;

  @media only screen and (max-width: $bp-medium) {
    display: none;
    //we want to hide the legal text
  }
}

//////////////////////////////////
/////GALLERY
.gallery {
  display: flex; //default flex-direction:row;
  &__photo {
    //Remember that responsive images are always
    //created by defining width or height in %
    width: 100%;
    display: block;
  }
}

//////////////////////////////////
/////HOTEL OVERVIEW

.overview {
  display: flex;
  align-items: center;
  border-bottom: var(--line);

  &__heading {
    font-size: 2.25rem;
    font-weight: 300;
    text-transform: uppercase;
    letter-spacing: 1px;
    padding: 1.5rem 3rem;

    @media only screen and (max-width: $bp-small) {
      font-size: 1.8rem;
      padding: 1.25rem 2rem;
    }
  }
  &__stars {
    margin-right: auto;
    display: flex;
  }
  &__icon-star,
  &__icon-location {
    width: 1.75rem;
    height: 1.75rem;
    fill: var(--color-primary);
  }

  &__location {
    font-size: 1.2rem;
    display: flex;
    align-items: center;
    margin-right: 3rem;
  }
  &__icon-location {
    margin-right: 1.5rem;
  }

  &__rating {
    background-color: var(--color-primary);
    color: #fff;
    margin-left: 0 2.25rem;
    align-self: stretch;
    padding: 2rem;

    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;

    @media only screen and (max-width: $bp-small) {
      padding: 0 1.25rem;
    }
  }

  &__rating-average {
    font-size: 2.25rem;
    font-weight: 300;
    margin-bottom: -3px;

    @media only screen and (max-width: $bp-small) {
      font-size: 1.8rem;
    }
  }

  &__rating-count {
    font-size: 0.8rem;
    text-transform: uppercase;

    @media only screen and (max-width: $bp-small) {
      font-size: 1.5rem;
    }
  }
}

////////////////////
////Inline Button

.btn-inline {
  border: none;
  color: var(--color-primary);
  font-size: inherit;
  border-bottom: 2px solid currentColor;
  display: inline-block;
  background-color: transparent;
  cursor: pointer;
  transition: margin-left 0.2s;

  & span {
    margin-left: 3px;
    transition: all 0.2s;
  }
  &:hover {
    color: var(--color-grey-dark-1);

    span {
      margin-left: 8px;
    }
  }

  &:focus {
    outline: none;
    animation: pulsate 1s infinite;
  }
}

////////////////////////////////
///////////PARAGRAPH
.paragraph:not(:last-of-type) {
  margin-bottom: 2rem;
}
///////////////////////////////
//////LIST
.list {
  list-style: none;
  margin: 3rem 0;
  padding: 3rem;
  border-top: var(--line);
  border-bottom: var(--line);
  display: flex;
  flex-wrap: wrap; // allows elements to move into new lines

  &__item {
    flex: 0 0 50%; //if we want to have two elements side by side
    margin-bottom: 0.7px;
  }

  &__item::before {
    content: "";
    display: inline-block;
    height: 1rem;
    width: 1rem;
    margin-right: 7px;

    //Including SVG's in older browsers
    background-image: url(../img/chevron-thin-right.svg);
    background-size: cover;

    //Newer Browser SVG inclusion - MASKS
    @supports (--webkit-mask-image: url()) or (mask-image: url()) {
      background-color: var(--color-primary);
      -webkit-mask-image: url(../img/chevron-thin-right.svg);
      -webkit-mask-size: cover; //makes the mask cover the entire element
      mask-image: url(../img/chevron-thin-right.svg);
      mask-size: cover;
      background-image: none;
    }
  }
}
//////////////////////////////
///////RECOMMEND
.recommend {
  font-size: 1.3rem;
  color: var(--color-grey-dark-3);
  display: flex;
  align-items: center;
  justify-content: stretch;

  &__count {
    margin-right: auto; //pushing the photos all the way to the end
  }
  &__friends {
    display: flex;
  }
  &__photo {
    box-sizing: content-box;
    height: 4rem;
    width: 4rem;
    border-radius: 50%;
    border: 2px solid #fff;
    //Making the images overlap over each other
    &:not(:last-child) {
      margin-right: -2rem;
    }
  }
}

////////////////////////////////////
//////REVIEWS
.review {
  position: relative;

  display: flex;
  flex-direction: column;
  justify-content: space-around;

  background-color: #fff;
  box-shadow: var(--shadow-light);

  padding: 3rem;
  margin-bottom: 3.5rem;

  overflow: none;

  @media only screen and (max-width: $bp-medium) {
    padding: 2rem;
    margin-bottom: 3rem;
  }

  &__text {
    position: relative;
    //defined a position so that we can use z-index
    z-index: 10;
    margin-bottom: 2rem;
  }
  &__user {
    display: flex;
    align-items: center; //Vertically align items
  }
  &__photo {
    height: 4.5rem;
    width: 4.5rem;

    border-radius: 50%;
    margin-right: 1.5rem;
  }
  &__user-box {
    display: flex;
    flex-direction: column;
  }
  &__user-name {
    text-transform: uppercase;
    font-size: 1.1rem;
    font-weight: 600;

    margin-bottom: 0.4px;
  }
  &__user-date {
    font-size: 1rem;
    color: var(--color-gray-dark-3);
  }
  &__rating {
    color: var(--color-primary);
    font-size: 2.2rem;
    font-weight: 300;

    margin-left: auto; //making a white space between it and adjacent element
  }

  //CREATING THE LARGE QUOTATION MARKS
  &::before {
    content: "\201e";
    position: absolute;
    transform: rotate(180deg);
    bottom: 3rem;
    left: 0rem;
    font-size: 15rem;
    color: var(--color-grey-light-2);

    font-family: sans-serif;

    line-height: 1;
    //remember to decrease line height when positioning special characters
    //since they by default come with a HUGE line heig
    z-index: 1;
  }
}

////////////////////////////////////
//////CALL TO ACTION (cta)
.cta {
  padding: 3.5rem 0;
  text-align: center;

  @media only screen and (max-width: $bp-medium) {
    padding: 2.5rem 0;
  }

  &__book-now {
    font-size: 1.5rem;
    font-weight: 300;
    text-transform: uppercase;

    margin-bottom: 2.5rem;
  }
}

.btn {
  font-size: 1.5rem;
  font-weight: 300;
  text-transform: uppercase;

  border-radius: 100px;
  border: none;

  background-image: linear-gradient(to right, var(--color-primary-light), var(--color-primary-dark));
  position: relative;

  overflow: hidden; //hides the span element that is currently invisible
  cursor: pointer;

  &__visible {
    display: inline-block; //so that we can use padding for our <span>
    padding: 2rem 7.5rem; //we are defining the size of the button with padding

    transition: all 0.2s;
  }

  & > * {
    //Selects __invisible and __visible
    height: 100%;
    width: 100%;
    transition: all 0.2s;
  }

  &__invisible {
    display: inline-block;
    position: absolute;
    left: 0;
    top: -100%; //moves the exact size of the element to the top
    //so if the element is 100px it will move 100px to the top

    padding: 2rem 0;
    //We want our hidden element to have a slightly smaller padding
    //so that it doesn't push into the visible element with its padding
  }

  &:hover {
    //We want the background gradient to move to the opposite side on hover
    background-image: linear-gradient(to left, var(--color-primary-light), var(--color-primary-dark));
  }

  &:focus {
    outline: none;
    animation: pulsate 1s infinite;
  }
  //The hover transitions will be done one way for the visible and another
  //for the invisible element, since the first is absolutely positioned
  //and the second element is not.

  &:hover &__visible {
    //The visible is not absolutely positioned so we use translate
    transform: translateY(100%);
  }
  &:hover &__invisible {
    //we differently absolutely position the invisible element
    top: 0;
  }
}
